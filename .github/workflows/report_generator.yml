name: Generate Market Report

on:
  schedule:
    # JSTの火-土 AM 7:30 は UTCの月-金 PM 10:30
    - cron: '30 22 * * 1-5'
  workflow_dispatch: # 手動実行も可能にする

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set timezone to JST
        run: |
          sudo timedatectl set-timezone Asia/Tokyo
          echo "TZ=Asia/Tokyo" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Google Service Account
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Debug timezone environment
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "=== Environment Info ==="
          date
          timedatectl status || echo "timedatectl not available"
          python debug_github_timezone.py

      - name: Run script
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_DOCS_ID: ${{ secrets.GOOGLE_DOCS_ID }}
        run: python main.py enhanced --hours-limit 24

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: execution-logs
          path: |
            error.log
            success.log
          if-no-files-found: ignore

      - name: Cleanup sensitive files
        if: always()
        run: |
          rm -f service_account.json

      - name: Commit and push report
        # This step will only run if the script was successful
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -f index.html charts/
          
          echo "--- Git Status After Add ---"
          git status
          
          # 変更があった場合のみコミット
          if ! git diff --staged --quiet; then
            git commit -m "Update market report for $(date +'%Y-%m-%d')"
            git push
          else
            echo "No changes to commit."
          fi
